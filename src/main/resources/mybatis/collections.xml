<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="collections">
    <sql id="geomColumns">
        trunc(ST_XMin(ST_Extent(st_transform(geom, 4326)))::numeric,7) xmin,
        trunc(ST_YMin(ST_Extent(st_transform(geom, 4326)))::numeric,7) ymin,
        trunc(ST_XMax(ST_Extent(st_transform(geom, 4326)))::numeric,7) xmax,
        trunc(ST_YMax(ST_Extent(st_transform(geom, 4326)))::numeric,7) ymax
    </sql>

    <sql id="selectCollectionsQuery">
        (select
            'monitoring-locations' id,
            #{monLocTitle,jdbcType=VARCHAR} title,
            #{monLocDescription,jdbcType=VARCHAR} description,
            jsonb_build_object(
                'contactName', #{monLocContactName,jdbcType=VARCHAR},
                'contactEmail', #{monLocContactEmail,jdbcType=VARCHAR}
            ) contact_info,
            <include refid="geomColumns"/>
         from nwis.monitoring_location
         where geom is not null
         <if test="collectionId != null and collectionId != 'monitoring-locations'">
            limit 0
         </if>
        )
      UNION
        select
            network_code id, network_name title, description, contact_info,
            <include refid="geomColumns"/>
        from nwis.network
        join nwis.network_sites on nwis.network.network_id = nwis.network_sites.network_id
        join nwis.monitoring_location on nwis.network_sites.monitoring_location_id = nwis.monitoring_location.monitoring_location_id
        where
            geom is not null
        <if test="collectionId != null">
            and network_code = #{collectionId,jdbcType=VARCHAR}
        </if>
        group by id, title, description, contact_info
      ORDER BY id
    </sql>

    <sql id="collectionColumnsToJson">
        id "id", 'feature' "itemType", title "title", description "description",
        json_build_array('') keywords,
        json_build_object(
            'spatial', json_build_object(
                 'bbox', json_build_array(
                      json_build_array(
                          xmin, ymin, xmax, ymax)
                      )
            ),
            'crs', 'http://www.opengis.net/def/crs/OGC/1.3/CRS83'
        ) extent,
        contact_info properties,
        json_build_array(
            json_build_object(
                'type', 'text/html',
                 'rel', 'canonical',
                 'title', 'information',
                 'href', 'https://waterdata.usgs.gov'
            ),
            json_build_object(
                'type', 'application/json',
                 'rel', 'self',
                 'title', 'This document as JSON',
                 'href',  #{serverUrl} || 'collections/' || id || '?f=json'
            ),
            json_build_object(
                'type', 'application/geo+json',
                 'rel', 'self',
                 'title', 'Features as GeoJSON',
                 'href',  #{serverUrl} || 'collections/' || id || '/items?f=json'
            )
        ) links
    </sql>

    <select id="getCollectionsJson" parameterType="map" resultType="String">
        select json_build_object(
            'collections', json_agg(collections),
             'links' , json_build_array(
                 json_build_object(
                      'type', 'application/json',
                       'rel',  'self',
                       'title', 'This document as JSON',
                       'href',  #{serverUrl} || 'collections?f=json'
                 )
             )
        )
        from (
            select <include refid="collectionColumnsToJson"/>
                from (<include refid="selectCollectionsQuery"/>) as cols
        ) as collections
    </select>

    <select id="getCollectionJson" parameterType="map" resultType="String">
      select row_to_json(collection)
        from (
            select <include refid="collectionColumnsToJson"/>
                from (<include refid="selectCollectionsQuery"/>) as cols
        ) as collection
    </select>

</mapper>